{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "iteration": 1654775323442,
  "links": [
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": [],
      "targetBlank": true,
      "title": "Add Trip",
      "tooltip": "Add a missing trip to the database",
      "type": "link",
      "url": "${vwsfriend_url:raw}/database/trips/edit?vin=${VIN}"
    },
    {
      "asDropdown": false,
      "icon": "dashboard",
      "includeVars": true,
      "keepTime": false,
      "tags": [],
      "targetBlank": false,
      "title": "Last Year",
      "tooltip": "",
      "type": "link",
      "url": "/d/${__dashboard.uid}/?from=now-1y&to=now"
    },
    {
      "asDropdown": false,
      "icon": "dashboard",
      "includeVars": true,
      "keepTime": false,
      "tags": [],
      "targetBlank": false,
      "title": "Last Month",
      "tooltip": "",
      "type": "link",
      "url": "/d/${__dashboard.uid}/?from=now-1M&to=now"
    },
    {
      "asDropdown": false,
      "icon": "dashboard",
      "includeVars": true,
      "keepTime": false,
      "tags": [],
      "targetBlank": false,
      "title": "Last Week",
      "tooltip": "",
      "type": "link",
      "url": "/d/${__dashboard.uid}/?from=now-1w&to=now"
    },
    {
      "asDropdown": true,
      "icon": "dashboard",
      "includeVars": true,
      "keepTime": false,
      "tags": [
        "vwsfriend"
      ],
      "targetBlank": false,
      "title": "Dashboards",
      "tooltip": "",
      "type": "dashboards",
      "url": ""
    }
  ],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "postgres",
        "uid": "P2EF847825A020B66"
      },
      "description": "List of all trips recorded. Not all attributes can be filled automatically. If you want to make additions or changes use the ⚙ button at the end of each row. If a trip is missing use the \"Add trip\" button.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "displayMode": "color-text",
            "filterable": false,
            "inspect": false
          },
          "decimals": 0,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Duration"
            },
            "properties": [
              {
                "id": "unit",
                "value": "dtdhms"
              },
              {
                "id": "custom.width",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(id|[a-zA-Z0-9]*_date_ts)/"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Start|End) Date/"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 160
              },
              {
                "id": "unit",
                "value": "dateTimeAsIso"
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Trip Details",
                    "url": "d/6JFDUrG7z?from=${__data.fields.start_date_ts}&to=${__data.fields.end_date_ts}&var-VIN=${VIN}&var-id=${__data.fields.id}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Length|Odometer)/"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 100
              },
              {
                "id": "unit",
                "value": "km"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Edit"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 20
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Edit this Trip",
                    "url": "${vwsfriend_url:raw}/database/trips/edit?id=${__data.fields.id}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Start Location"
            },
            "properties": [
              {
                "id": "custom.filterable",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Destination Location"
            },
            "properties": [
              {
                "id": "custom.filterable",
                "value": true
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 26,
        "w": 17,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "links": [
        {
          "targetBlank": true,
          "title": "Add trip",
          "url": "${vwsfriend_url:raw}/database/trips/edit?vin=${VIN}"
        }
      ],
      "options": {
        "footer": {
          "fields": [
            "Length",
            "Duration"
          ],
          "reducer": [
            "sum"
          ],
          "show": true
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.5.5",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P2EF847825A020B66"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  \"startDate\" AS \"Start Date\",\n  COALESCE(start_locations.\"display_name\", CONCAT_WS(', ', COALESCE(CONCAT_WS(', ', start_locations.name, start_locations.amenity), nullif(CONCAT_WS(' ', start_locations.road, start_locations.house_number), '')), start_locations.neighbourhood, start_locations.city, start_locations.postcode, start_locations.country)) AS \"Start Location\",\n  COALESCE(destination_location.\"display_name\", CONCAT_WS(', ', COALESCE(CONCAT_WS(', ', destination_location.name, destination_location.amenity), nullif(CONCAT_WS(' ', destination_location.road, destination_location.house_number), '')), destination_location.neighbourhood, destination_location.city, destination_location.postcode, destination_location.country)) AS \"Destination Location\",\n  EXTRACT('epoch' FROM(\"endDate\"-\"startDate\")) AS \"Duration\",\n  (\"end_mileage_km\"-\"start_mileage_km\") AS \"Length\",\n  \"end_mileage_km\" AS \"Odometer\",\n  '⚙' AS \"Edit\",\n  id,\n  COALESCE((round(extract(epoch FROM \"startDate\") - 300) * 1000)::TEXT,'now-1d') AS start_date_ts,\n  COALESCE((round(extract(epoch FROM \"endDate\") + 300) * 1000)::TEXT,'now') AS end_date_ts\nFROM trips\nLEFT JOIN locations start_locations ON trips.\"start_location_id\" = start_locations.osm_id\nLEFT JOIN locations destination_location ON trips.\"destination_location_id\" = destination_location.osm_id\nLEFT JOIN trip_tag ON trips.id = trip_tag.trips_id\nWHERE\n  ($__timeFilter(\"startDate\") OR $__timeFilter(\"endDate\")) AND\n  trips.vehicle_vin = '$VIN' ${tag_sql:raw}\nGROUP BY 1,2,3,4,5,6,7,8,9,10\nORDER BY 1 DESC\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "charging_sessions",
          "timeColumn": "connected",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Trips",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P2EF847825A020B66"
      },
      "description": "Top 10 list of trips between two locations. If this panel is empty location data is missing for your car. You can add manually location data by using the ⚙ button.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "# Drives"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 70
              },
              {
                "id": "custom.minWidth",
                "value": 60
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Med. Duration"
            },
            "properties": [
              {
                "id": "unit",
                "value": "dthms"
              },
              {
                "id": "custom.width",
                "value": 110
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.*_location_id/"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "# Drives"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "",
                    "url": "d/vNxU6Xl7k?var-VIN=${VIN}&var-start_location=${__data.fields.start_location_id}&var-destination_location=${__data.fields.destination_location_id}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 13,
        "w": 7,
        "x": 17,
        "y": 0
      },
      "id": 4,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.5.5",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P2EF847825A020B66"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  COALESCE(start_locations.\"display_name\", CONCAT_WS(', ', COALESCE(CONCAT_WS(', ', start_locations.name, start_locations.amenity), nullif(CONCAT_WS(' ', start_locations.road, start_locations.house_number), '')), start_locations.neighbourhood, start_locations.city, start_locations.postcode, start_locations.country)) AS \"Start\",\n  COALESCE(destination_location.\"display_name\", CONCAT_WS(', ', COALESCE(CONCAT_WS(', ', destination_location.name, destination_location.amenity), nullif(CONCAT_WS(' ', destination_location.road, destination_location.house_number), '')), destination_location.neighbourhood, destination_location.city, destination_location.postcode, destination_location.country)) AS \"Destination\",\n  count(DISTINCT id) AS \"# Drives\",\n  percentile_cont(0.5) WITHIN GROUP (ORDER BY EXTRACT(EPOCH FROM \"endDate\"-\"startDate\")) AS \"Med. Duration\",\n  \"start_location_id\",\n  \"destination_location_id\"\nFROM trips\nLEFT JOIN locations start_locations ON trips.\"start_location_id\" = start_locations.osm_id\nLEFT JOIN locations destination_location ON trips.\"destination_location_id\" = destination_location.osm_id\nLEFT JOIN trip_tag ON trips.id = trip_tag.trips_id\nWHERE\n  ($__timeFilter(\"startDate\") OR $__timeFilter(\"endDate\")) AND\n  trips.vehicle_vin = '$VIN' ${tag_sql:raw} AND\n  trips.\"start_location_id\" IS NOT NULL AND\n  trips.\"destination_location_id\" IS NOT NULL\nGROUP BY start_locations.display_name, start_locations.name, start_locations.amenity, start_locations.road, start_locations.house_number, start_locations.neighbourhood, start_locations.city, start_locations.postcode, start_locations.country, destination_location.display_name, destination_location.name, destination_location.amenity, destination_location.road, destination_location.house_number, destination_location.neighbourhood, destination_location.city, destination_location.postcode, destination_location.country, \"start_location_id\", \"destination_location_id\"\nORDER BY \"# Drives\" DESC, \"Start\" ASC\nLIMIT 10",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "charging_sessions",
          "timeColumn": "connected",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Most popular Trips",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P2EF847825A020B66"
      },
      "description": "Top 10 list of longest trips. If this panel is empty location data is missing for your car. You can add manually location data by using the ⚙ button.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(id|[a-zA-Z0-9]*_date_ts)/"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Date"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 100
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Trip Details",
                    "url": "d/6JFDUrG7z?from=${__data.fields.start_date_ts}&to=${__data.fields.end_date_ts}&var-VIN=${VIN}&var-id=${__data.fields.id}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Duration"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 100
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 13,
        "w": 7,
        "x": 17,
        "y": 13
      },
      "id": 5,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.5.5",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P2EF847825A020B66"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  \"endDate\" AS \"Date\",\n  COALESCE(destination_location.\"display_name\", CONCAT_WS(', ', COALESCE(CONCAT_WS(', ', destination_location.name, destination_location.amenity), nullif(CONCAT_WS(' ', destination_location.road, destination_location.house_number), '')), destination_location.neighbourhood, destination_location.city, destination_location.postcode, destination_location.country)) AS \"Destination\",\n  (\"endDate\"-\"startDate\") AS \"Duration\",\n  id,\n  COALESCE((round(extract(epoch FROM \"endDate\") - 10) * 1000)::TEXT,'now-1d') AS start_date_ts,\n  COALESCE((round(extract(epoch FROM \"endDate\") - 10) * 1000)::TEXT,'now') AS end_date_ts\nFROM trips\nLEFT JOIN locations start_locations ON trips.\"start_location_id\" = start_locations.osm_id\nLEFT JOIN locations destination_location ON trips.\"destination_location_id\" = destination_location.osm_id\nLEFT JOIN trip_tag ON trips.id = trip_tag.trips_id\nWHERE\n  ($__timeFilter(\"startDate\") OR $__timeFilter(\"endDate\")) AND\n  (\"endDate\"-\"startDate\") IS NOT NULL AND\n  trips.vehicle_vin = '$VIN' ${tag_sql:raw}\nGROUP BY 1,2,3,4,5,6\nORDER BY \"Duration\" DESC\nLIMIT 10",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "charging_sessions",
          "timeColumn": "connected",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Longest Trips by Duration",
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 36,
  "style": "dark",
  "tags": [
    "vwsfriend"
  ],
  "templating": {
    "list": [
      {
        "datasource": {
          "type": "postgres",
          "uid": "P2EF847825A020B66"
        },
        "definition": "SELECT \"vin\" || ':' || \"nickname\" || ' (' || \"model\" || ' - ' || \"carType\" || ')' FROM vehicles LEFT JOIN vehicle_settings ON vehicles.VIN = vehicle_settings.vehicle_vin WHERE vehicle_settings.hide IS NOT True ORDER BY vehicle_settings.sorting_order ASC",
        "description": "Select Car if you have multiple cars in your account",
        "hide": 0,
        "includeAll": false,
        "label": "Car",
        "multi": false,
        "name": "VIN",
        "options": [],
        "query": "SELECT \"vin\" || ':' || \"nickname\" || ' (' || \"model\" || ' - ' || \"carType\" || ')' FROM vehicles LEFT JOIN vehicle_settings ON vehicles.VIN = vehicle_settings.vehicle_vin WHERE vehicle_settings.hide IS NOT True ORDER BY vehicle_settings.sorting_order ASC",
        "refresh": 1,
        "regex": "/(?<value>[A-Z0-9]+):(?<text>.*)/",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "P2EF847825A020B66"
        },
        "definition": "SELECT vwsfriend_url FROM settings LIMIT 1",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "vwsfriend_url",
        "options": [],
        "query": "SELECT vwsfriend_url FROM settings LIMIT 1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "allValue": "all_values",
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "postgres",
          "uid": "P2EF847825A020B66"
        },
        "definition": "SELECT tag.name || ': ' || tag.description || '$' || tag.name FROM trip_tag LEFT JOIN tag ON trip_tag.tag_name = tag.name WHERE use_trips = true",
        "hide": 0,
        "includeAll": true,
        "label": "Show",
        "multi": true,
        "name": "tag",
        "options": [],
        "query": "SELECT tag.name || ': ' || tag.description || '$' || tag.name FROM trip_tag LEFT JOIN tag ON trip_tag.tag_name = tag.name WHERE use_trips = true",
        "refresh": 2,
        "regex": "/(?<text>.+)\\$(?<value>.+)/",
        "skipUrlSync": false,
        "sort": 5,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "",
          "value": ""
        },
        "datasource": {
          "type": "postgres",
          "uid": "P2EF847825A020B66"
        },
        "definition": "SELECT CASE WHEN LENGTH($$${tag:raw}$$)>0 AND $$${tag:singlequote}$$ != 'all_values' THEN $$ AND trip_tag.tag_name IN (${tag:singlequote}) $$ ELSE '' END",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "tag_sql",
        "options": [],
        "query": "SELECT CASE WHEN LENGTH($$${tag:raw}$$)>0 AND $$${tag:singlequote}$$ != 'all_values' THEN $$ AND trip_tag.tag_name IN (${tag:singlequote}) $$ ELSE '' END",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "1970-01-01T00:00:00.000Z",
    "to": "now"
  },
  "timepicker": {
    "hidden": false
  },
  "timezone": "",
  "title": "Trips",
  "uid": "2wMSY9Mnk",
  "version": 1,
  "weekStart": ""
}