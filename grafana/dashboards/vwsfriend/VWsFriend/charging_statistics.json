{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "limit": 100,
        "name": "Annotations & Alerts",
        "showIn": 0,
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "iteration": 1645603010581,
  "links": [
    {
      "asDropdown": false,
      "icon": "dashboard",
      "includeVars": true,
      "keepTime": false,
      "tags": [],
      "targetBlank": false,
      "title": "Last Year",
      "tooltip": "",
      "type": "link",
      "url": "/d/${__dashboard.uid}/?from=now-1y&to=now"
    },
    {
      "asDropdown": false,
      "icon": "dashboard",
      "includeVars": true,
      "keepTime": false,
      "tags": [],
      "targetBlank": false,
      "title": "Last Month",
      "tooltip": "",
      "type": "link",
      "url": "/d/${__dashboard.uid}/?from=now-1M&to=now"
    },
    {
      "asDropdown": false,
      "icon": "dashboard",
      "includeVars": true,
      "keepTime": false,
      "tags": [],
      "targetBlank": false,
      "title": "Last Week",
      "tooltip": "",
      "type": "link",
      "url": "/d/${__dashboard.uid}/?from=now-1w&to=now"
    },
    {
      "asDropdown": true,
      "icon": "dashboard",
      "includeVars": true,
      "keepTime": false,
      "tags": [
        "vwsfriend"
      ],
      "targetBlank": false,
      "title": "Dashboards",
      "tooltip": "",
      "type": "dashboards",
      "url": ""
    }
  ],
  "liveNow": false,
  "panels": [
    {
      "description": "Total number of charging sessions recorded.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.4.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P2EF847825A020B66"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  COUNT(DISTINCT charging_sessions.id) AS \"Number of Charges\"\nFROM charging_sessions\nLEFT JOIN charging_tag ON charging_sessions.id = charging_tag.charging_sessions_id\nWHERE\n  ($__timeFilter(\"started\") OR $__timeFilter(\"ended\")) AND\n  charging_sessions.vehicle_vin = '$VIN' ${tag_sql:raw}",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "refuel_sessions",
          "timeColumn": "date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Total Charges",
      "type": "stat"
    },
    {
      "description": "Total energy charged.\nEnergy is taken from exact value that was added to the charging sessions or estimated based on SoC if no exact data is available.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 4,
        "y": 0
      },
      "id": 3,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.4.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P2EF847825A020B66"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  SUM(\"Amount\") AS \"Amount\"\nFROM\n  (SELECT DISTINCT\n       charging_sessions.id,\n       COALESCE(\"realCharged_kWh\",\n      (\"endSOC_pct\" - \"startSOC_pct\") * (\n        CASE WHEN vehicles.\"carType\" = 'ELECTRIC' THEN vehicle_settings.\"primary_capacity\"::NUMERIC\n             ELSE vehicle_settings.\"secondary_capacity\"::NUMERIC\n        END\n        / 100::NUMERIC)) AS \"Amount\"\n    FROM charging_sessions\n    LEFT JOIN vehicles ON charging_sessions.vehicle_vin = vehicles.vin\n    LEFT JOIN vehicle_settings ON charging_sessions.vehicle_vin = vehicle_settings.vehicle_vin\n    LEFT JOIN charging_tag ON charging_sessions.id = charging_tag.charging_sessions_id\n    WHERE\n      ($__timeFilter(\"started\") OR $__timeFilter(\"ended\")) AND\n      charging_sessions.vehicle_vin = '$VIN' ${tag_sql:raw}) AS result",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "refuel_sessions",
          "timeColumn": "date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Total Amount",
      "type": "stat"
    },
    {
      "autoPanLabels": true,
      "autoWidthLabels": true,
      "categories": "a,b",
      "circleMaxSize": 30,
      "circleMinSize": "5",
      "circleOptions": {
        "strokeEnabled": true,
        "strokeWeight": "1"
      },
      "circleSizeAbsoluteEnabled": false,
      "circleSizeAbsoluteFactor": 1,
      "clickthroughOptions": {},
      "clickthroughUrl": "",
      "colorMode": "threshold",
      "colors": [
        "#C8F2C2",
        "#73BF69",
        "#FADE2A",
        "#FF9830",
        "#F2495C"
      ],
      "customAttribution": false,
      "decimals": 2,
      "description": "Charging locations: Size and color corresponds to energy charged at that station.\nLocations are only recorded when provided from the car.\nEnergy is taken from exact value that was added to the charging sessions or estimated based on SoC if no exact data is available.",
      "doubleClickZoom": true,
      "dragging": true,
      "enableOverlay": false,
      "enableReloadOverlay": false,
      "esMetric": "Count",
      "formatOmitEmptyValue": false,
      "gridPos": {
        "h": 16,
        "w": 13,
        "x": 8,
        "y": 0
      },
      "hideEmpty": false,
      "hideTimepickerNavigation": false,
      "hideZero": false,
      "id": 12,
      "ignoreEmptyGeohashValues": false,
      "ignoreEscapeKey": false,
      "ignoreInvalidGeohashValues": false,
      "initialZoom": 1,
      "locationData": "table",
      "mapCenter": "(0°, 0°)",
      "mapCenterLatitude": 0,
      "mapCenterLongitude": 0,
      "mapFitData": true,
      "maxDataPoints": 1,
      "mouseWheelZoom": true,
      "overlayOpacity": 0.5,
      "overlayRangeLatitude": "0,10",
      "overlayRangeLongitude": "0,20",
      "overlayUrl": "",
      "showAttribution": true,
      "showLegend": false,
      "showZoomControl": true,
      "stickyLabels": false,
      "tableQueryOptions": {
        "geohashField": "geohash",
        "labelField": "Charger",
        "latitudeField": "final_latitude",
        "linkField": "",
        "longitudeField": "final_longitude",
        "metricField": "Amount",
        "queryType": "coordinates"
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P2EF847825A020B66"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  \"final_latitude\",\n  \"final_longitude\",\n  \"Charger\",\n  SUM(\"Amount\") AS \"Amount\"\nFROM\n  (SELECT DISTINCT\n  charging_sessions.id,\n  COALESCE(chargers.latitude, ROUND(charging_sessions.\"position_latitude\"::NUMERIC,3)) AS \"final_latitude\",\n  COALESCE(chargers.longitude, ROUND(charging_sessions.\"position_longitude\"::NUMERIC,3)) AS \"final_longitude\",\n  COALESCE(chargers.name, 'unkown') AS \"Charger\",\n  COALESCE(\"realCharged_kWh\",\n  (\"endSOC_pct\" - \"startSOC_pct\") * (\n    CASE WHEN vehicles.\"carType\" = 'ELECTRIC' THEN vehicle_settings.\"primary_capacity\"::NUMERIC\n         ELSE vehicle_settings.\"secondary_capacity\"::NUMERIC\n    END\n    / 100::NUMERIC)) AS \"Amount\"\nFROM charging_sessions\nLEFT JOIN locations ON charging_sessions.location_id = locations.osm_id\nLEFT JOIN vehicles ON charging_sessions.vehicle_vin = vehicles.vin\nLEFT JOIN vehicle_settings ON charging_sessions.vehicle_vin = vehicle_settings.vehicle_vin\nLEFT JOIN chargers ON charging_sessions.\"charger_id\" = chargers.id\nLEFT JOIN charging_tag ON charging_sessions.id = charging_tag.charging_sessions_id\nWHERE\n  COALESCE(chargers.latitude, charging_sessions.\"position_latitude\") IS NOT NULL AND\n  COALESCE(chargers.longitude, charging_sessions.\"position_longitude\") IS NOT NULL AND\n  ($__timeFilter(started) OR $__timeFilter(connected) OR $__timeFilter(locked)) AND\n  charging_sessions.vehicle_vin = '$VIN' ${tag_sql:raw}) AS result\nGROUP BY \"final_latitude\", \"final_longitude\", \"Charger\"",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "refuel_sessions",
          "timeColumn": "date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "0,25,50,75",
      "title": "Charge map",
      "type": "panodata-map-panel",
      "unitPlural": "kWh",
      "unitSingular": "kWh",
      "valueName": "total"
    },
    {
      "description": "Difference between estimated energy charged from the car and real energy charged.\nValue is calculated if charging sessions have real energy charged added.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "noValue": "No real charging values",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 0,
        "y": 4
      },
      "id": 10,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.4.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P2EF847825A020B66"
          },
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  (SUM(\"Estimated\") - SUM(\"realCharged_kWh\")) / SUM(\"realCharged_kWh\") * 100 AS \"Delta %\"\nFROM\n  (SELECT DISTINCT\n       charging_sessions.id AS id,\n       ((\"endSOC_pct\" - \"startSOC_pct\") * (\n    CASE WHEN vehicles.\"carType\" = 'ELECTRIC' THEN vehicle_settings.\"primary_capacity\"::NUMERIC\n         ELSE vehicle_settings.\"secondary_capacity\"::NUMERIC\n    END\n    / 100::NUMERIC))::NUMERIC AS \"Estimated\",\n    \"realCharged_kWh\"::NUMERIC\n    FROM charging_sessions\n    LEFT JOIN vehicles ON charging_sessions.vehicle_vin = vehicles.vin\n    LEFT JOIN vehicle_settings ON charging_sessions.vehicle_vin = vehicle_settings.vehicle_vin\n    LEFT JOIN charging_tag ON charging_sessions.id = charging_tag.charging_sessions_id\n    WHERE\n      ($__timeFilter(\"started\") OR $__timeFilter(\"ended\")) AND\n      \"realCharged_kWh\" IS NOT NULL AND \"endSOC_pct\" IS NOT NULL AND \"startSOC_pct\" IS NOT NULL AND\n      charging_sessions.vehicle_vin = '$VIN' ${tag_sql:raw}) AS result",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "refuel_sessions",
          "timeColumn": "date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Difference estimated/real",
      "type": "stat"
    },
    {
      "description": "Sum of all charging costs.\nCharging costs can be added in each charging session.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "noValue": "No cost added",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "currencyEUR"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 4,
        "y": 4
      },
      "id": 9,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.4.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P2EF847825A020B66"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  SUM(\"realCost_ct\"::NUMERIC/100::NUMERIC) AS \"Cost\"\nFROM\n  (SELECT DISTINCT\n       charging_sessions.id,\n       \"realCost_ct\"\n    FROM charging_sessions\n    LEFT JOIN vehicles ON charging_sessions.vehicle_vin = vehicles.vin\n    LEFT JOIN vehicle_settings ON charging_sessions.vehicle_vin = vehicle_settings.vehicle_vin\n    LEFT JOIN charging_tag ON charging_sessions.id = charging_tag.charging_sessions_id\n    WHERE\n      ($__timeFilter(\"started\") OR $__timeFilter(\"ended\")) AND\n      charging_sessions.vehicle_vin = '$VIN' ${tag_sql:raw}) AS result",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "refuel_sessions",
          "timeColumn": "date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Total Cost",
      "type": "stat"
    },
    {
      "description": "Energy added by AC/DC charging sessions.\nAC/DC can be automatically detected if provided from the car. If not it is guessed based on charge power. If the charge power is not available AC/DC can be manually set in the charging sessions.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "unit": "kwatth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 4,
        "x": 0,
        "y": 8
      },
      "id": 4,
      "options": {
        "displayLabels": [
          "name",
          "value",
          "percent"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "bottom"
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Amount$/",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "8.1.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P2EF847825A020B66"
          },
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  \"Type\",\n  SUM(\"Amount\") AS \"Amount\"\nFROM\n  (SELECT DISTINCT\n     charging_sessions.id, \n     COALESCE(acdc::TEXT, 'unknown') AS \"Type\",\n     COALESCE(\"realCharged_kWh\",\n    (\"endSOC_pct\" - \"startSOC_pct\") * (\n      CASE WHEN vehicles.\"carType\" = 'ELECTRIC' THEN vehicle_settings.\"primary_capacity\"::NUMERIC\n           ELSE vehicle_settings.\"secondary_capacity\"::NUMERIC\n      END\n      / 100::NUMERIC)) AS \"Amount\"\n  FROM charging_sessions\n  LEFT JOIN vehicles ON charging_sessions.vehicle_vin = vehicles.vin\n  LEFT JOIN vehicle_settings ON charging_sessions.vehicle_vin = vehicle_settings.vehicle_vin\n  LEFT JOIN charging_tag ON charging_sessions.id = charging_tag.charging_sessions_id\n  WHERE\n    ($__timeFilter(\"started\") OR $__timeFilter(\"ended\")) AND\n    charging_sessions.vehicle_vin = '$VIN' ${tag_sql:raw}) AS result\nGROUP BY \"Type\"",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "refuel_sessions",
          "timeColumn": "date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "AC/DC",
      "type": "piechart"
    },
    {
      "description": "Amount of  Energy loaded above and below 0.8C.\n1C corresponds to the power necessary to load the car in 1hour to its full capacity.\nGross battery capacity must be set in the vehicles settings.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 4,
        "x": 4,
        "y": 8
      },
      "id": 14,
      "options": {
        "displayLabels": [
          "name",
          "percent"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "values": [
            "percent"
          ]
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Amount$/",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "8.1.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P2EF847825A020B66"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "(SELECT\n '<0.8C' AS \"Type\",\n SUM(\"chargePower_kW\") / (SELECT SUM(\"chargePower_kW\") FROM charges) * 100 AS \"Amount\"\nFROM charges\nLEFT JOIN vehicles ON charges.vehicle_vin = vehicles.vin\nLEFT JOIN vehicle_settings ON charges.vehicle_vin = vehicle_settings.vehicle_vin\nWHERE\n  $__timeFilter(\"carCapturedTimestamp\") AND\n  charges.\"chargePower_kW\" <= (\n    CASE WHEN vehicles.\"carType\" = 'ELECTRIC' THEN vehicle_settings.\"primary_capacity_total\"::NUMERIC\n         ELSE vehicle_settings.\"secondary_capacity_total\"::NUMERIC\n    END\n    * 0.8) AND\n  charges.\"chargingState\" = 'CHARGING' AND\n  charges.vehicle_vin = '$VIN')\nUNION\nSELECT\n '>0.8C' AS label,\n SUM(\"chargePower_kW\") / (SELECT SUM(\"chargePower_kW\") FROM charges) * 100 AS \"Amount\"\nFROM charges\nLEFT JOIN vehicles ON charges.vehicle_vin = vehicles.vin\nLEFT JOIN vehicle_settings ON charges.vehicle_vin = vehicle_settings.vehicle_vin\nWHERE\n  $__timeFilter(\"carCapturedTimestamp\") AND\n  charges.\"chargePower_kW\" > (\n    CASE WHEN vehicles.\"carType\" = 'ELECTRIC' THEN vehicle_settings.\"primary_capacity_total\"::NUMERIC\n         ELSE vehicle_settings.\"secondary_capacity_total\"::NUMERIC\n    END\n    * 0.8) AND\n  charges.\"chargingState\" = 'CHARGING' AND\n  charges.vehicle_vin = '$VIN'",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "refuel_sessions",
          "timeColumn": "date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Charging Load",
      "type": "piechart"
    },
    {
      "description": "Distribution of the power used for charging.",
      "gridPos": {
        "h": 8,
        "w": 11,
        "x": 0,
        "y": 16
      },
      "id": 13,
      "pconfig": {
        "fixScale": "",
        "layout": {
          "dragmode": "zoom",
          "font": {
            "family": "\"Open Sans\", Helvetica, Arial, sans-serif"
          },
          "hovermode": "closest",
          "legend": {
            "orientation": "h"
          },
          "showlegend": false,
          "xaxis": {
            "range": [
              0,
              null
            ],
            "rangemode": "between",
            "showgrid": true,
            "title": "Power [kW]",
            "type": "linear",
            "zeroline": true
          },
          "yaxis": {
            "range": [
              0,
              null
            ],
            "rangemode": "between",
            "showgrid": true,
            "title": "%",
            "type": "linear",
            "zeroline": true
          },
          "zaxis": {
            "rangemode": "normal",
            "showgrid": true,
            "type": "linear",
            "zeroline": false
          }
        },
        "loadFromCDN": false,
        "settings": {
          "displayModeBar": false,
          "type": "scatter"
        },
        "showAnnotations": true,
        "traces": [
          {
            "mapping": {
              "color": "Number",
              "text": "metric",
              "x": "middle",
              "y": "amount"
            },
            "name": "Distribution",
            "settings": {
              "color_option": "solid",
              "line": {
                "color": "#005f81",
                "dash": "solid",
                "shape": "linear",
                "width": 6
              },
              "marker": {
                "color": "#33B5E5",
                "colorscale": "YlOrRd",
                "line": {
                  "color": "#DDD",
                  "width": 0
                },
                "showscale": false,
                "size": 15,
                "sizemin": 3,
                "sizemode": "diameter",
                "sizeref": 0.2,
                "symbol": "circle"
              },
              "textposition": ""
            },
            "show": {
              "line": true,
              "lines": true,
              "markers": true
            }
          }
        ]
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P2EF847825A020B66"
          },
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n width_bucket(\"chargePower_kW\",-5,205,21) AS power,\n (((width_bucket(\"chargePower_kW\",-5,205,21)-1.5)*(210/21)))::TEXT || 'kW to ' || (((width_bucket(\"chargePower_kW\",-5,205,21)-0.5)*(210/21)))::TEXT || 'kW' AS metric,\n ((width_bucket(\"chargePower_kW\",-5,205,21)::decimal-1)*(210/21)) AS middle,\n SUM(\"chargePower_kW\") / (SELECT SUM(\"chargePower_kW\") FROM charges) * 100 AS Amount\nFROM charges\nWHERE\n  $__timeFilter(\"carCapturedTimestamp\") AND\n  charges.\"chargingState\" = 'CHARGING' AND\n  charges.vehicle_vin = '$VIN'\nGROUP BY power, metric, middle\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "refuel_sessions",
          "timeColumn": "date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Power distribution",
      "transformations": [],
      "type": "natel-plotly-panel",
      "version": 1
    },
    {
      "description": "Distribution of the charging time over the day.\nFor meaningful values wait until a significant number of charging sessions were recorded.",
      "gridPos": {
        "h": 8,
        "w": 10,
        "x": 11,
        "y": 16
      },
      "id": 6,
      "pconfig": {
        "fixScale": "",
        "layout": {
          "dragmode": "lasso",
          "font": {
            "family": "\"Open Sans\", Helvetica, Arial, sans-serif"
          },
          "hovermode": "closest",
          "legend": {
            "orientation": "h"
          },
          "showlegend": false,
          "xaxis": {
            "range": [
              0,
              24
            ],
            "rangemode": "between",
            "showgrid": true,
            "title": "Hour",
            "type": "linear",
            "zeroline": true
          },
          "yaxis": {
            "range": [
              0,
              null
            ],
            "rangemode": "between",
            "showgrid": true,
            "title": "%",
            "type": "linear",
            "zeroline": true
          },
          "zaxis": {
            "rangemode": "normal",
            "showgrid": true,
            "type": "linear",
            "zeroline": false
          }
        },
        "loadFromCDN": false,
        "settings": {
          "displayModeBar": false,
          "type": "scatter"
        },
        "showAnnotations": true,
        "traces": [
          {
            "mapping": {
              "color": "Number",
              "text": "Text",
              "x": "Hour",
              "y": "Number"
            },
            "name": "Distribution",
            "settings": {
              "color_option": "solid",
              "line": {
                "color": "#005f81",
                "dash": "solid",
                "shape": "linear",
                "width": 6
              },
              "marker": {
                "color": "#33B5E5",
                "colorscale": "YlOrRd",
                "line": {
                  "color": "#DDD",
                  "width": 0
                },
                "showscale": false,
                "size": 15,
                "sizemin": 3,
                "sizemode": "diameter",
                "sizeref": 0.2,
                "symbol": "circle"
              },
              "textposition": ""
            },
            "show": {
              "line": true,
              "lines": true,
              "markers": true
            }
          }
        ]
      },
      "targets": [
        {
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n EXTRACT(HOUR FROM ((\"carCapturedTimestamp\"::timestamp AT TIME ZONE 'UTC') AT TIME ZONE INTERVAL '${__to:date:Z}')) AS \"Hour\",\n (COUNT(*) / CAST( SUM(COUNT(*)) over () as FLOAT) * 100) AS \"Number\",\n ROUND((COUNT(*) / CAST( SUM(COUNT(*)) over () as FLOAT) * 100))::TEXT || '% of charging time' AS \"Text\"\nFROM charges\nWHERE\n  $__timeFilter(\"carCapturedTimestamp\") AND\n  charges.\"chargingState\" = 'CHARGING' AND\n  charges.vehicle_vin = '$VIN'\nGROUP BY 1\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "refuel_sessions",
          "timeColumn": "date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Hourly distribution",
      "transformations": [],
      "type": "natel-plotly-panel",
      "version": 1
    },
    {
      "description": "Charging speeds at different SoC.\nFor meaningful values wait until a significant number of charging sessions were recorded.",
      "gridPos": {
        "h": 8,
        "w": 11,
        "x": 0,
        "y": 24
      },
      "id": 8,
      "pconfig": {
        "fixScale": "",
        "layout": {
          "dragmode": "lasso",
          "font": {
            "family": "\"Open Sans\", Helvetica, Arial, sans-serif"
          },
          "hovermode": "closest",
          "legend": {
            "orientation": "h"
          },
          "showlegend": true,
          "xaxis": {
            "range": [
              0,
              100
            ],
            "rangemode": "between",
            "showgrid": true,
            "title": "SoC%",
            "type": "linear",
            "zeroline": true
          },
          "yaxis": {
            "rangemode": "tozero",
            "showgrid": true,
            "title": "Power kW",
            "type": "linear",
            "zeroline": true
          },
          "zaxis": {
            "rangemode": "normal",
            "showgrid": true,
            "type": "linear",
            "zeroline": false
          }
        },
        "loadFromCDN": false,
        "settings": {
          "displayModeBar": false,
          "type": "scatter"
        },
        "showAnnotations": true,
        "traces": [
          {
            "mapping": {
              "color": "soc",
              "text": "maxText",
              "x": "soc",
              "y": "max"
            },
            "name": "Max",
            "settings": {
              "color_option": "solid",
              "line": {
                "color": "#F2495C",
                "dash": "solid",
                "shape": "linear",
                "width": 1
              },
              "marker": {
                "color": "#33B5E5",
                "colorscale": "YlOrRd",
                "line": {
                  "color": "#DDD",
                  "width": 0
                },
                "showscale": false,
                "size": 15,
                "sizemin": 3,
                "sizemode": "diameter",
                "sizeref": 0.2,
                "symbol": "circle"
              },
              "textposition": ""
            },
            "show": {
              "line": true,
              "lines": true,
              "markers": false
            }
          },
          {
            "mapping": {
              "color": "soc",
              "text": "avgText",
              "x": "soc",
              "y": "avg"
            },
            "name": "Average",
            "settings": {
              "color_option": "solid",
              "line": {
                "color": "#FADE2A",
                "dash": "solid",
                "shape": "linear",
                "width": 1
              },
              "marker": {
                "color": "#33B5E5",
                "colorscale": "YlOrRd",
                "line": {
                  "color": "#DDD",
                  "width": 0
                },
                "showscale": false,
                "size": 15,
                "sizemin": 3,
                "sizemode": "diameter",
                "sizeref": 0.2,
                "symbol": "circle"
              },
              "textposition": ""
            },
            "show": {
              "line": true,
              "lines": true,
              "markers": false
            }
          },
          {
            "mapping": {
              "color": "soc",
              "text": "minText",
              "x": "soc",
              "y": "min"
            },
            "name": "Min",
            "settings": {
              "color_option": "solid",
              "line": {
                "color": "#73BF69",
                "dash": "solid",
                "shape": "linear",
                "width": 1
              },
              "marker": {
                "color": "#33B5E5",
                "colorscale": "YlOrRd",
                "line": {
                  "color": "#DDD",
                  "width": 0
                },
                "showscale": false,
                "size": 15,
                "sizemin": 3,
                "sizemode": "diameter",
                "sizeref": 0.2,
                "symbol": "circle"
              },
              "textposition": ""
            },
            "show": {
              "line": true,
              "lines": true,
              "markers": false
            }
          }
        ]
      },
      "pluginVersion": "8.1.0",
      "targets": [
        {
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  battery.\"currentSOC_pct\" AS \"soc\",\n  MAX(charges.\"chargePower_kW\") AS \"max\",\n  AVG(charges.\"chargePower_kW\") AS \"avg\",\n  MIN(charges.\"chargePower_kW\") AS \"min\",\n  'max. ' || MAX(charges.\"chargePower_kW\")::TEXT || 'kW from ' || COUNT(charges.\"chargePower_kW\")::TEXT  || ' values' AS \"maxText\",\n  'avg. ' || ROUND(AVG(charges.\"chargePower_kW\")::DECIMAL,2)::TEXT || 'kW from ' || COUNT(charges.\"chargePower_kW\")::TEXT  || ' values' AS \"avgText\",\n  'min. ' || MIN(charges.\"chargePower_kW\")::TEXT || 'kW from ' || COUNT(charges.\"chargePower_kW\")::TEXT  || ' values' AS \"minText\"\nFROM\n  charges\nINNER JOIN battery ON battery.\"carCapturedTimestamp\" = (SELECT battery.\"carCapturedTimestamp\" FROM battery WHERE battery.\"carCapturedTimestamp\" > charges.\"carCapturedTimestamp\" - interval '120 SECONDS' AND battery.\"carCapturedTimestamp\" < charges.\"carCapturedTimestamp\" + interval '120 SECONDS' ORDER BY ABS(EXTRACT(epoch FROM (battery.\"carCapturedTimestamp\" - charges.\"carCapturedTimestamp\"))) ASC LIMIT 1)\nWHERE\n    charges.\"chargePower_kW\" > 0 AND\n    $__timeFilter(charges.\"carCapturedTimestamp\") AND\n    charges.vehicle_vin = '$VIN'\nGROUP BY soc\nORDER by soc ASC",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "refuel_sessions",
          "timeColumn": "date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Charging Speed by SoC",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Label": false,
              "soc": false
            },
            "indexByName": {},
            "renameByName": {}
          }
        }
      ],
      "type": "natel-plotly-panel",
      "version": 1
    }
  ],
  "refresh": false,
  "schemaVersion": 35,
  "style": "dark",
  "tags": [
    "vwsfriend"
  ],
  "templating": {
    "list": [
      {
        "datasource": {
          "type": "postgres",
          "uid": "P2EF847825A020B66"
        },
        "definition": "SELECT \"vin\" || ':' || \"nickname\" || ' (' || \"model\" || ' - ' || \"carType\" || ')' FROM vehicles",
        "description": "Select Car if you have multiple cars in your account",
        "hide": 0,
        "includeAll": false,
        "label": "Car",
        "multi": false,
        "name": "VIN",
        "options": [],
        "query": "SELECT \"vin\" || ':' || \"nickname\" || ' (' || \"model\" || ' - ' || \"carType\" || ')' FROM vehicles",
        "refresh": 1,
        "regex": "/(?<value>[A-Z0-9]+):(?<text>.*)/",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": "all_values",
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "definition": "SELECT tag.name || ': ' || tag.description || '$' || tag.name FROM charging_tag LEFT JOIN tag ON charging_tag.tag_name = tag.name WHERE use_charges = true",
        "hide": 0,
        "includeAll": true,
        "label": "Show",
        "multi": true,
        "name": "tag",
        "options": [],
        "query": "SELECT tag.name || ': ' || tag.description || '$' || tag.name FROM charging_tag LEFT JOIN tag ON charging_tag.tag_name = tag.name WHERE use_charges = true",
        "refresh": 2,
        "regex": "/(?<text>.+)\\$(?<value>.+)/",
        "skipUrlSync": false,
        "sort": 5,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "",
          "value": ""
        },
        "definition": "SELECT CASE WHEN LENGTH($$${tag:raw}$$)>0 AND $$${tag:singlequote}$$ != 'all_values' THEN $$ AND charging_tag.tag_name IN (${tag:singlequote}) $$ ELSE '' END",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "tag_sql",
        "options": [],
        "query": "SELECT CASE WHEN LENGTH($$${tag:raw}$$)>0 AND $$${tag:singlequote}$$ != 'all_values' THEN $$ AND charging_tag.tag_name IN (${tag:singlequote}) $$ ELSE '' END",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "1970-01-01T00:00:00.000Z",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Charging Statistics",
  "uid": "iM0RIRn7z",
  "version": 1,
  "weekStart": ""
}