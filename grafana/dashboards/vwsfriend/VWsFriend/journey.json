{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "links": [
    {
      "asDropdown": false,
      "icon": "dashboard",
      "includeVars": true,
      "keepTime": false,
      "tags": [],
      "targetBlank": false,
      "title": "Trim",
      "tooltip": "Change the journey time from starting ${__from:date} and ending ${__to:date} to starting ${tripstart:date} and ending ${tripend:date}",
      "type": "link",
      "url": "/d/${__dashboard.uid}/?from=$tripstart&to=$tripend"
    },
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": [],
      "targetBlank": true,
      "title": "Add journey",
      "tooltip": "Add selection as a new journey to the database",
      "type": "link",
      "url": "${vwsfriend_url:raw}/database/journey/edit?vin=${VIN}&tripstart=${tripstart}&tripend=${tripend}"
    },
    {
      "asDropdown": false,
      "icon": "dashboard",
      "includeVars": true,
      "keepTime": false,
      "tags": [],
      "targetBlank": false,
      "title": "Today so far",
      "tooltip": "Use the current day as time range for journey.",
      "type": "link",
      "url": "/d/${__dashboard.uid}/?from=now/d&to=now"
    },
    {
      "asDropdown": true,
      "icon": "dashboard",
      "includeVars": true,
      "keepTime": false,
      "tags": [
        "vwsfriend"
      ],
      "targetBlank": false,
      "title": "Dashboards",
      "tooltip": "",
      "type": "dashboards",
      "url": ""
    }
  ],
  "liveNow": true,
  "panels": [
    {
      "datasource": {
        "type": "postgres",
        "uid": "P2EF847825A020B66"
      },
      "description": "Complete journey with all stops.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "degree"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 15,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "maxDataPoints": 500,
      "options": {
        "basemap": {
          "config": {},
          "name": "Layer 0",
          "type": "osm-standard"
        },
        "controls": {
          "mouseWheelZoom": true,
          "showAttribution": true,
          "showDebug": false,
          "showScale": false,
          "showZoom": true
        },
        "layers": [
          {
            "config": {
              "showLegend": false,
              "style": {
                "color": {
                  "fixed": "dark-green"
                },
                "opacity": 0.4,
                "rotation": {
                  "fixed": 0,
                  "max": 360,
                  "min": -360,
                  "mode": "mod"
                },
                "size": {
                  "fixed": 5,
                  "max": 15,
                  "min": 2
                },
                "symbol": {
                  "fixed": "img/icons/marker/circle.svg",
                  "mode": "fixed"
                },
                "text": {
                  "fixed": "",
                  "mode": "field"
                },
                "textConfig": {
                  "fontSize": 12,
                  "offsetX": 0,
                  "offsetY": 0,
                  "textAlign": "center",
                  "textBaseline": "middle"
                }
              }
            },
            "filterData": {
              "id": "byRefId",
              "options": "A"
            },
            "location": {
              "latitude": "latitude",
              "longitude": "longitude",
              "mode": "coords"
            },
            "name": "Locations",
            "tooltip": true,
            "type": "markers"
          },
          {
            "config": {
              "style": {
                "color": {
                  "fixed": "#F2495C"
                },
                "lineWidth": 2,
                "opacity": 1,
                "rotation": {
                  "fixed": 0,
                  "max": 360,
                  "min": -360,
                  "mode": "mod"
                },
                "size": {
                  "fixed": 5,
                  "max": 15,
                  "min": 2
                },
                "symbol": {
                  "fixed": "img/icons/marker/circle.svg",
                  "mode": "fixed"
                },
                "textConfig": {
                  "fontSize": 12,
                  "offsetX": 0,
                  "offsetY": 0,
                  "textAlign": "center",
                  "textBaseline": "middle"
                }
              }
            },
            "filterData": {
              "id": "byRefId",
              "options": "A"
            },
            "location": {
              "latitude": "latitude",
              "longitude": "longitude",
              "mode": "coords"
            },
            "name": "Route",
            "tooltip": true,
            "type": "route"
          }
        ],
        "tooltip": {
          "mode": "details"
        },
        "view": {
          "id": "fit",
          "lat": 0,
          "lon": 0,
          "zoom": 18
        }
      },
      "pluginVersion": "9.1.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P2EF847825A020B66"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "(SELECT\n  $__time(\"startDate\"),\n  trips.start_position_latitude AS latitude,\n  trips.start_position_longitude AS longitude\nFROM trips\nWHERE\n  $__timeFilter(\"startDate\") AND\n  trips.vehicle_vin = '$VIN'\nUNION\nSELECT\n  $__time(\"endDate\"),\n  trips.destination_position_latitude AS latitude,\n  trips.destination_position_longitude AS longitude\nFROM trips\nWHERE\n  $__timeFilter(\"endDate\") AND\n  trips.vehicle_vin = '$VIN'\n)\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "charging_sessions",
          "timeColumn": "connected",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Map",
      "type": "geomap"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P2EF847825A020B66"
      },
      "description": "Journey starting location and ending location",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "rgb(255, 255, 255)",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Odometer"
            },
            "properties": [
              {
                "id": "unit",
                "value": "km"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Duration"
            },
            "properties": [
              {
                "id": "unit",
                "value": "dtdhms"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Length"
            },
            "properties": [
              {
                "id": "unit",
                "value": "km"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Distance"
            },
            "properties": [
              {
                "id": "unit",
                "value": "km"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 13,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "/.*/",
          "values": false
        },
        "text": {
          "titleSize": 20,
          "valueSize": 20
        },
        "textMode": "value_and_name"
      },
      "pluginVersion": "9.1.0",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\nfromlocation.display_name AS \"From\",\ntolocation.display_name AS \"To\"\nFROM\n(SELECT\n  FIRST_VALUE(\"start_location_id\") OVER sd AS \"fromid\",\n  LAST_VALUE(\"destination_location_id\") OVER sd AS \"toid\"\nFROM trips\nWHERE\n  ($__timeFilter(\"startDate\") OR $__timeFilter(\"endDate\")) AND\n  trips.vehicle_vin = '$VIN'\nWINDOW sd as (ORDER BY \"startDate\" ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\nLIMIT 1) AS fromto\nJOIN locations AS fromlocation ON  fromlocation.osm_id = fromto.fromid\nJOIN locations AS tolocation ON  tolocation.osm_id = fromto.toid",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "charging_sessions",
          "timeColumn": "connected",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "${title} From / To",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P2EF847825A020B66"
      },
      "description": "Details of the journey. If possible the consumption is calculated.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "rgb(255, 255, 255)",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Length"
            },
            "properties": [
              {
                "id": "unit",
                "value": "km"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*Mileage"
            },
            "properties": [
              {
                "id": "unit",
                "value": "km"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "(Start|End)"
            },
            "properties": [
              {
                "id": "unit",
                "value": "dateTimeAsLocal"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Energy used (estimated)"
            },
            "properties": [
              {
                "id": "unit",
                "value": "kwatth"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Energy consumption / 100km"
            },
            "properties": [
              {
                "id": "unit",
                "value": "kWh/100km"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Gasoline used (estimated)"
            },
            "properties": [
              {
                "id": "unit",
                "value": "litre"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Gasoline consumption / 100km"
            },
            "properties": [
              {
                "id": "unit",
                "value": "L/100km"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 7,
        "x": 12,
        "y": 3
      },
      "id": 10,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "/.*/",
          "values": false
        },
        "text": {
          "titleSize": 25,
          "valueSize": 25
        },
        "textMode": "value_and_name"
      },
      "pluginVersion": "9.1.0",
      "targets": [
        {
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH dates AS\n(\n  SELECT\n    vehicle_vin,\n    FIRST_VALUE(\"startDate\") OVER sd AS \"Start\",\n    LAST_VALUE(\"endDate\") OVER sd AS \"End\"\n  FROM trips\n  WHERE\n    ($__timeFilter(\"startDate\") OR $__timeFilter(\"endDate\")) AND\n    trips.vehicle_vin = '$VIN'\n  WINDOW sd as (ORDER BY \"startDate\" ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n  LIMIT 1\n),\nenergy_charged AS\n(\n  SELECT\n    SUM(COALESCE(\"realCharged_kWh\",\n    (\"endSOC_pct\" - \"startSOC_pct\") * (\n      CASE\n        WHEN\n          vehicles.\"carType\" = 'ELECTRIC'\n        THEN\n          vehicle_settings.\"primary_capacity\"::NUMERIC\n        ELSE\n          vehicle_settings.\"secondary_capacity\"::NUMERIC\n      END\n      / 100::NUMERIC))) AS \"Energy Charged\"\n  FROM \n    charging_sessions\n  LEFT JOIN vehicles ON charging_sessions.vehicle_vin = vehicles.vin\n  LEFT JOIN vehicle_settings ON charging_sessions.vehicle_vin = vehicle_settings.vehicle_vin\n  WHERE\n    $__timeFilter(\"started\") AND\n    charging_sessions.vehicle_vin = '$VIN'  \n),\nrefueled AS\n(\n  SELECT\n    SUM(COALESCE(\"realRefueled_l\",\n    (\"endSOC_pct\" - \"startSOC_pct\") * ( \n      vehicle_settings.\"primary_capacity\"::NUMERIC\n      / 100::NUMERIC))) AS \"Refueled\"\n  FROM \n    refuel_sessions\n  LEFT JOIN vehicles ON refuel_sessions.vehicle_vin = vehicles.vin\n  LEFT JOIN vehicle_settings ON refuel_sessions.vehicle_vin = vehicle_settings.vehicle_vin\n  WHERE\n    $__timeFilter(\"date\") AND\n    refuel_sessions.vehicle_vin = '$VIN'  \n)\n\nSELECT\n  *,\n  \"Energy used (estimated)\" / \"Length\" * 100 AS \"Energy consumption / 100km\",\n  \"Gasoline used (estimated)\" / \"Length\" * 100 AS \"Gasoline consumption / 100km\"\nFROM\n  (\n    SELECT\n      FIRST_VALUE(\"startDate\") OVER sd AS \"Start\",\n      LAST_VALUE(\"endDate\") OVER sd AS \"End\",\n      FIRST_VALUE(\"start_mileage_km\") OVER sd AS \"Start Mileage\",\n      LAST_VALUE(\"end_mileage_km\") OVER sd AS \"End Mileage\",\n      (LAST_VALUE(\"end_mileage_km\") OVER sd)-(FIRST_VALUE(\"start_mileage_km\") OVER sd) AS \"Length\",\n      (\n        SELECT\n          (startbattery.\"currentSOC_pct\" - endbattery.\"currentSOC_pct\") * (\n            CASE\n              WHEN\n                vehicles.\"carType\" = 'ELECTRIC'\n              THEN\n                vehicle_settings.\"primary_capacity\"::NUMERIC\n              ELSE\n                vehicle_settings.\"secondary_capacity\"::NUMERIC\n            END\n            / 100::NUMERIC) + (\n              SELECT COALESCE(\"Energy Charged\",0) FROM energy_charged\n            ) AS \"Energy used (estimated)\"\n        FROM\n          dates\n        LEFT JOIN vehicles ON dates.vehicle_vin = vehicles.vin\n        LEFT JOIN vehicle_settings ON dates.vehicle_vin = vehicle_settings.vehicle_vin\n        JOIN battery AS startbattery ON startbattery.\"carCapturedTimestamp\" = (SELECT \"carCapturedTimestamp\" FROM battery WHERE \"carCapturedTimestamp\" > \"Start\" - interval '600 SECONDS' AND \"carCapturedTimestamp\" < \"Start\" + interval '600 SECONDS' ORDER BY ABS(EXTRACT(epoch FROM (\"carCapturedTimestamp\" - \"Start\"))) ASC LIMIT 1)\n        JOIN battery AS endbattery ON endbattery.\"carCapturedTimestamp\" = (SELECT \"carCapturedTimestamp\" FROM battery WHERE \"carCapturedTimestamp\" > \"End\" - interval '600 SECONDS' AND \"carCapturedTimestamp\" < \"End\" + interval '600 SECONDS' ORDER BY ABS(EXTRACT(epoch FROM (\"carCapturedTimestamp\" - \"End\"))) ASC LIMIT 1)\n      ) AS \"Energy used (estimated)\",\n      (\n        SELECT\n          CASE\n            WHEN\n              vehicles.\"carType\" != 'ELECTRIC'\n            THEN\n              (startranges.\"primary_currentSOC_pct\" - endranges.\"primary_currentSOC_pct\") * (vehicle_settings.\"primary_capacity\"::NUMERIC\n                / 100::NUMERIC) + (\n                  SELECT COALESCE(\"Refueled\",0) FROM refueled\n                )\n            ELSE\n              NULL\n            END AS \"Gasoline used (estimated)\"\n        FROM\n          dates\n        LEFT JOIN vehicles ON dates.vehicle_vin = vehicles.vin\n        LEFT JOIN vehicle_settings ON dates.vehicle_vin = vehicle_settings.vehicle_vin\n        JOIN ranges AS startranges ON startranges.\"carCapturedTimestamp\" = (SELECT \"carCapturedTimestamp\" FROM ranges WHERE \"carCapturedTimestamp\" > \"Start\" - interval '600 SECONDS' AND \"carCapturedTimestamp\" < \"Start\" + interval '600 SECONDS' ORDER BY ABS(EXTRACT(epoch FROM (\"carCapturedTimestamp\" - \"Start\"))) ASC LIMIT 1)\n        JOIN ranges AS endranges ON endranges.\"carCapturedTimestamp\" = (SELECT \"carCapturedTimestamp\" FROM ranges WHERE \"carCapturedTimestamp\" > \"End\" - interval '600 SECONDS' AND \"carCapturedTimestamp\" < \"End\" + interval '600 SECONDS' ORDER BY ABS(EXTRACT(epoch FROM (\"carCapturedTimestamp\" - \"End\"))) ASC LIMIT 1)\n      ) AS \"Gasoline used (estimated)\"\n    FROM trips\n    WHERE\n      ($__timeFilter(\"startDate\") OR $__timeFilter(\"endDate\")) AND\n      trips.vehicle_vin = '$VIN'\n    WINDOW sd as (ORDER BY \"startDate\" ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n    LIMIT 1\n  ) AS precalc",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "charging_sessions",
          "timeColumn": "connected",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Details",
      "transformations": [],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P2EF847825A020B66"
      },
      "description": "Distribution of time driven and charging for the whole journey.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 5,
        "x": 19,
        "y": 3
      },
      "id": 8,
      "options": {
        "displayLabels": [
          "name",
          "value",
          "percent"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Time$/",
          "values": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "8.1.0",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  'Charging' AS \"type\",\n  EXTRACT(EPOCH FROM SUM(COALESCE(\"ended\", \"unlocked\", \"disconnected\") - COALESCE(\"started\", \"locked\", \"connected\"))) AS \"Time\"\nFROM charging_sessions\nWHERE\n  ($__timeFilter(\"started\") OR $__timeFilter(\"ended\")) AND\n  vehicle_vin = '$VIN'\nUNION\nSELECT\n  'Driving' AS \"type\",\n  EXTRACT(EPOCH FROM SUM(\"endDate\"-\"startDate\")) AS \"Time\"\nFROM trips\nWHERE\n  ($__timeFilter(\"startDate\") OR $__timeFilter(\"endDate\")) AND\n  vehicle_vin = '$VIN'",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "refuel_sessions",
          "timeColumn": "date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Time",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P2EF847825A020B66"
      },
      "description": "Phases of driving or charging of this journey. Use the trim button to trim the journey starting from the first driving phase until the last driving phase of the selected time range from ${__from:date} to ${__to:date}. After trim the journey starts at ${tripstart:date} and ends at at ${tripend:date}",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "custom": {
            "fillOpacity": 100,
            "lineWidth": 0,
            "spanNulls": false
          },
          "mappings": [
            {
              "options": {
                "CHARGE_PURPOSE_REACHED_CONSERVATION": {
                  "color": "blue",
                  "index": 6,
                  "text": "charging"
                },
                "CHARGE_PURPOSE_REACHED_NOT_CONSERVATION_CHARGING": {
                  "color": "#3d3d3d",
                  "index": 5,
                  "text": "off"
                },
                "CHARGING": {
                  "color": "blue",
                  "index": 3,
                  "text": "charging"
                },
                "DRIVING": {
                  "color": "green",
                  "index": 0,
                  "text": "driving"
                },
                "OFF": {
                  "color": "#3d3d3d",
                  "index": 2,
                  "text": "off"
                },
                "READY_FOR_CHARGING": {
                  "color": "#3d3d3d",
                  "index": 1,
                  "text": "off"
                },
                "charging": {
                  "color": "#5794F2",
                  "index": 4
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 15
      },
      "id": 12,
      "interval": "5m",
      "links": [
        {
          "title": "Trim",
          "url": "/d/${__dashboard.uid}/?from=$tripstart&to=$tripend"
        }
      ],
      "options": {
        "alignValue": "center",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "mergeValues": true,
        "rowHeight": 0.9,
        "showValue": "auto",
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "7.5.2",
      "targets": [
        {
          "alias": "Charging State",
          "datasource": {
            "type": "postgres",
            "uid": "P2EF847825A020B66"
          },
          "format": "table",
          "group": [],
          "groupBy": [],
          "hide": false,
          "measurement": "",
          "metricColumn": "none",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "(\nSELECT\n  \"carCapturedTimestamp\" AS \"time\",\n  \"chargingState\"::TEXT AS \"State\"\nFROM charges\nWHERE\n  (\"chargingState\" = 'CHARGING' OR \"chargingState\" = 'OFF' OR \"chargingState\" = 'READY_FOR_CHARGING' OR \"chargingState\" = 'CHARGE_PURPOSE_REACHED_CONSERVATION' OR \"chargingState\" = 'CHARGE_PURPOSE_REACHED_NOT_CONSERVATION_CHARGING' OR \"chargingState\" = 'CONSERVATION') AND\n  $__timeFilter(\"carCapturedTimestamp\") AND\n  vehicle_vin = '$VIN'\nUNION\nSELECT\n  \"startDate\" AS time,\n  'DRIVING' AS \"State\"\nFROM trips\nWHERE\n  $__timeFilter(\"startDate\") AND\n  vehicle_vin = '$VIN'\nUNION\nSELECT\n  \"endDate\" AS time,\n  'OFF' AS \"State\"\nFROM trips\nWHERE\n  $__timeFilter(\"endDate\") AND\n  vehicle_vin = '$VIN'\n)\nORDER BY 1  ",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "States",
      "type": "state-timeline"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P2EF847825A020B66"
      },
      "description": "Battery state of charge and electric range over the whole journey.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "SoC",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "stepAfter",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.*Range/"
            },
            "properties": [
              {
                "id": "unit",
                "value": "lengthkm"
              },
              {
                "id": "custom.axisLabel",
                "value": "Range"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 24,
        "x": 0,
        "y": 18
      },
      "id": 15,
      "interval": "5m",
      "options": {
        "legend": {
          "calcs": [
            "max",
            "min"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "8.2.5",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  \"carCapturedTimestamp\" AS \"time\",\n  \"cruisingRangeElectric_km\" AS \"Electric Range\"\nFROM battery\nWHERE\n  $__timeFilter(\"carCapturedTimestamp\") AND\n  vehicle_vin = '$VIN'\nORDER BY 1  ",
          "refId": "1",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "alias": "Battery SoC",
          "format": "time_series",
          "group": [],
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "previous"
              ],
              "type": "fill"
            }
          ],
          "metricColumn": "none",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "SELECT\n  \"carCapturedTimestamp\" AS \"time\",\n  \"currentSOC_pct\" AS \"Battery SoC\"\nFROM battery\nWHERE\n  $__timeFilter(\"carCapturedTimestamp\") AND\n  vehicle_vin = '$VIN'\nORDER BY 1",
          "refId": "2",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "\"primary_currentSOC_pct\""
                ],
                "type": "column"
              }
            ]
          ],
          "table": "ranges",
          "tags": [],
          "timeColumn": "\"carCapturedTimestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "varchar",
              "name": "",
              "params": [
                "vehicle_vin",
                "=",
                "'$VIN'"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "Battery Level",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P2EF847825A020B66"
      },
      "description": "All trips for the whole journey. Not all attributes can be filled automatically. If you want to make additions or changes use the ⚙ button at the end of each row. You can also add missing trips.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "displayMode": "color-text",
            "filterable": true,
            "inspect": false
          },
          "decimals": 0,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Duration"
            },
            "properties": [
              {
                "id": "unit",
                "value": "dtdhms"
              },
              {
                "id": "custom.width",
                "value": 90
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(id|[a-zA-Z0-9]*_date_ts)/"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Start|End) Date/"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 160
              },
              {
                "id": "unit",
                "value": "dateTimeAsIso"
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Trip Details",
                    "url": "d/6JFDUrG7z?from=${__data.fields.start_date_ts}&to=${__data.fields.end_date_ts}&var-VIN=${VIN}&var-id=${__data.fields.id}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(Length|Odometer)/"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 100
              },
              {
                "id": "unit",
                "value": "km"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Edit"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 20
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Edit this Trip",
                    "url": "${vwsfriend_url:raw}/database/trips/edit?id=${__data.fields.id}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 23
      },
      "id": 6,
      "links": [
        {
          "targetBlank": true,
          "title": "Add trip",
          "url": "${vwsfriend_url:raw}/database/trips/edit?vin=${VIN}"
        }
      ],
      "options": {
        "footer": {
          "fields": [
            "Length",
            "Duration"
          ],
          "reducer": [
            "sum"
          ],
          "show": true
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "9.1.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P2EF847825A020B66"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  \"startDate\" AS \"Start Date\",\n  COALESCE(start_locations.\"display_name\", CONCAT_WS(', ', COALESCE(CONCAT_WS(', ', start_locations.name, start_locations.amenity), nullif(CONCAT_WS(' ', start_locations.road, start_locations.house_number), '')), start_locations.neighbourhood, start_locations.city, start_locations.postcode, start_locations.country)) AS \"Start Location\",\n  COALESCE(destination_location.\"display_name\", CONCAT_WS(', ', COALESCE(CONCAT_WS(', ', destination_location.name, destination_location.amenity), nullif(CONCAT_WS(' ', destination_location.road, destination_location.house_number), '')), destination_location.neighbourhood, destination_location.city, destination_location.postcode, destination_location.country)) AS \"Destination Location\",\n  EXTRACT('epoch' FROM (\"endDate\"-\"startDate\")) AS \"Duration\",\n  (\"end_mileage_km\"-\"start_mileage_km\") AS \"Length\",\n  \"end_mileage_km\" AS \"Odometer\",\n  '⚙' AS \"Edit\",\n  id,\n  COALESCE((round(extract(epoch FROM \"startDate\") - 300) * 1000)::TEXT,'now-1d') AS start_date_ts,\n  COALESCE((round(extract(epoch FROM \"endDate\") + 300) * 1000)::TEXT,'now') AS end_date_ts\nFROM trips\nLEFT JOIN locations start_locations ON trips.\"start_location_id\" = start_locations.osm_id\nLEFT JOIN locations destination_location ON trips.\"destination_location_id\" = destination_location.osm_id\nWHERE\n  ($__timeFilter(\"startDate\") OR $__timeFilter(\"endDate\")) AND\n  trips.vehicle_vin = '$VIN'\nORDER BY 1 ASC",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "charging_sessions",
          "timeColumn": "connected",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Trips",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P2EF847825A020B66"
      },
      "description": "All charging sessions for the whole journey. Not all attributes can be filled automatically. If you want to make additions or changes use the ⚙ button at the end of each row. You can also add missing sessions.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "displayMode": "color-text",
            "filterable": false,
            "inspect": false
          },
          "decimals": 0,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Location"
            },
            "properties": [
              {
                "id": "noValue"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Date"
            },
            "properties": [
              {
                "id": "unit",
                "value": "dateTimeAsIso"
              },
              {
                "id": "custom.width",
                "value": 150
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Data Details",
                    "url": "d/5rkOB0G7z?from=${__data.fields.start_date_ts}&to=${__data.fields.end_date_ts}&var-VIN=${VIN}&var-id=${__data.fields.id}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Max. Power"
            },
            "properties": [
              {
                "id": "unit",
                "value": "kwatt"
              },
              {
                "id": "custom.width",
                "value": 95
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/% (Start|End)/"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              },
              {
                "id": "color",
                "value": {
                  "mode": "continuous-RdYlGr"
                }
              },
              {
                "id": "custom.width",
                "value": 65
              },
              {
                "id": "min",
                "value": 0
              },
              {
                "id": "max",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Odometer"
            },
            "properties": [
              {
                "id": "unit",
                "value": "km"
              },
              {
                "id": "custom.width",
                "value": 85
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Duration"
            },
            "properties": [
              {
                "id": "unit",
                "value": "dtdhms"
              },
              {
                "id": "custom.width",
                "value": 80
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "AC/DC"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 80
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": ""
                    }
                  ]
                }
              },
              {
                "id": "custom.filterable",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(id|[a-zA-Z0-9]*_date_ts)/"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Amount"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 85
              },
              {
                "id": "unit",
                "value": "kwatth"
              },
              {
                "id": "decimals",
                "value": 2
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Avg. Power"
            },
            "properties": [
              {
                "id": "unit",
                "value": "kwatt"
              },
              {
                "id": "custom.width",
                "value": 95
              },
              {
                "id": "decimals",
                "value": 2
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "✓"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 50
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.filterable",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Cost"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 50
              },
              {
                "id": "unit",
                "value": "currencyEUR"
              },
              {
                "id": "decimals",
                "value": 2
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Edit"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 20
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Edit this charging session",
                    "url": "${vwsfriend_url:raw}/database/charging-session/edit?id=${__data.fields.id}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 31
      },
      "id": 2,
      "links": [
        {
          "targetBlank": true,
          "title": "Add charging",
          "url": "${vwsfriend_url:raw}/database/charging-session/edit?vin=${VIN}"
        }
      ],
      "options": {
        "footer": {
          "fields": [
            "Amount",
            "Cost",
            "Duration"
          ],
          "reducer": [
            "sum"
          ],
          "show": true
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "9.1.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P2EF847825A020B66"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  COALESCE (started, COALESCE (locked, connected)) AS \"Date\",\n  COALESCE(locations.\"display_name\", CONCAT_WS(', ', COALESCE(CONCAT_WS(', ', locations.name, locations.amenity), nullif(CONCAT_WS(' ', locations.road, locations.house_number), '')), locations.neighbourhood, locations.city, locations.postcode, locations.country)) AS \"Location\",\n  EXTRACT('epoch' FROM (COALESCE (ended, COALESCE (unlocked, disconnected)) - COALESCE (started, COALESCE (locked, connected)))) AS \"Duration\",\n  \"maximumChargePower_kW\" AS \"Max. Power\",\n  ((\"endSOC_pct\" - \"startSOC_pct\") * (\n    CASE WHEN vehicles.\"carType\" = 'ELECTRIC' THEN vehicle_settings.\"primary_capacity\"::NUMERIC\n         ELSE vehicle_settings.\"secondary_capacity\"::NUMERIC\n    END\n    / 100::NUMERIC)) / (EXTRACT(epoch FROM (COALESCE(ended, COALESCE(unlocked, disconnected)) - COALESCE(started, COALESCE (locked, connected))))::NUMERIC / 3600::NUMERIC) AS \"Avg. Power\",\n  acdc AS \"AC/DC\",\n  \"startSOC_pct\" AS \"% Start\",\n  \"endSOC_pct\" AS \"% End\",\n  COALESCE(\"realCharged_kWh\",\n  (\"endSOC_pct\" - \"startSOC_pct\") * (\n    CASE WHEN vehicles.\"carType\" = 'ELECTRIC' THEN vehicle_settings.\"primary_capacity\"::NUMERIC\n         ELSE vehicle_settings.\"secondary_capacity\"::NUMERIC\n    END\n    / 100::NUMERIC)) AS \"Amount\",\n  CASE WHEN \"realCharged_kWh\" IS NOT NULL THEN '✓'\n       ELSE NULL\n  END AS \"✓\",\n  \"realCost_ct\"::NUMERIC/ 100 AS \"Cost\",\n  \"mileage_km\" AS \"Odometer\",\n  '⚙' AS \"Edit\",\n  id,\n  (round(extract(epoch FROM COALESCE (started, COALESCE (locked, connected))) - 10) * 1000) AS start_date_ts,\n  COALESCE((round(extract(epoch FROM COALESCE (ended, COALESCE (unlocked, disconnected))) - 10) * 1000)::TEXT,'now') AS end_date_ts\nFROM charging_sessions\nLEFT JOIN locations ON charging_sessions.location_id = locations.osm_id\nLEFT JOIN vehicles ON charging_sessions.vehicle_vin = vehicles.vin\nLEFT JOIN vehicle_settings ON charging_sessions.vehicle_vin = vehicle_settings.vehicle_vin\nWHERE\n  ($__timeFilter(started) OR $__timeFilter(connected) OR $__timeFilter(locked)) AND\n  charging_sessions.vehicle_vin = '$VIN'\nORDER BY 1 ASC",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "charging_sessions",
          "timeColumn": "connected",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Charges",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P2EF847825A020B66"
      },
      "description": "All refueling sessions for the whole journey. Not all attributes can be filled automatically. If you want to make additions or changes use the ⚙ button at the end of each row. You can also add missing sessions.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "displayMode": "color-text",
            "filterable": false,
            "inspect": false
          },
          "decimals": 0,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Date"
            },
            "properties": [
              {
                "id": "unit",
                "value": "dateTimeAsIso"
              },
              {
                "id": "custom.width",
                "value": 160
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Data Details",
                    "url": "d/DO0EwAGnk?from=${__data.fields.start_date_ts}&to=${__data.fields.start_date_ts}&var-VIN=${VIN}&var-id=${__data.fields.id}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Odometer"
            },
            "properties": [
              {
                "id": "unit",
                "value": "km"
              },
              {
                "id": "custom.width",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/% (Start|End)/"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 80
              },
              {
                "id": "min",
                "value": 0
              },
              {
                "id": "max",
                "value": 100
              },
              {
                "id": "color",
                "value": {
                  "mode": "continuous-RdYlGr"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/(id|[a-zA-Z0-9]_date_ts)/"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Amount"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 90
              },
              {
                "id": "unit",
                "value": "litre"
              },
              {
                "id": "decimals",
                "value": 2
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Edit"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 20
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Edit this refuel session",
                    "url": "${vwsfriend_url:raw}/database/refuel-session/edit?id=${__data.fields.id}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Cost"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 50
              },
              {
                "id": "unit",
                "value": "currencyEUR"
              },
              {
                "id": "decimals",
                "value": 2
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "✓"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.filterable",
                "value": true
              },
              {
                "id": "custom.width",
                "value": 50
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Location"
            },
            "properties": [
              {
                "id": "custom.filterable",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Edit"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 20
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Edit this refuel session",
                    "url": "${vwsfriend_url:raw}/database/refuel-session/edit?id=${__data.fields.id}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 38
      },
      "id": 17,
      "links": [
        {
          "targetBlank": true,
          "title": "Add refueling",
          "url": "${vwsfriend_url:raws}/database/refuel-session/edit?vin=${VIN}"
        }
      ],
      "options": {
        "footer": {
          "fields": [
            "Amount",
            "Cost"
          ],
          "reducer": [
            "sum"
          ],
          "show": true
        },
        "showHeader": true
      },
      "pluginVersion": "9.0.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P2EF847825A020B66"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  date AS \"Date\",\n  COALESCE(locations.\"display_name\", CONCAT_WS(', ', COALESCE(CONCAT_WS(', ', locations.name, locations.amenity), nullif(CONCAT_WS(' ', locations.road, locations.house_number), '')), locations.neighbourhood, locations.city, locations.postcode, locations.country)) AS \"Location\",\n  \"startSOC_pct\" AS \"% Start\",\n  \"endSOC_pct\" AS \"% End\",\n   (\"endSOC_pct\" - \"startSOC_pct\") * (vehicle_settings.\"primary_capacity\"::NUMERIC / 100::NUMERIC) AS \"Amount\",\n  CASE WHEN \"realRefueled_l\" IS NOT NULL THEN '✓'\n       ELSE NULL\n  END AS \"✓\",\n  \"realCost_ct\"::NUMERIC/ 100 AS \"Cost\",\n  \"mileage_km\" AS \"Odometer\",\n  '⚙' AS \"Edit\",\n  id,\n  (round(extract(epoch FROM date)) * 1000) AS start_date_ts\nFROM refuel_sessions\nLEFT JOIN locations ON refuel_sessions.location_id = locations.osm_id\nLEFT JOIN vehicles ON refuel_sessions.vehicle_vin = vehicles.vin\nLEFT JOIN vehicle_settings ON refuel_sessions.vehicle_vin = vehicle_settings.vehicle_vin\nWHERE\n  $__timeFilter(date) AND\n  refuel_sessions.vehicle_vin = '$VIN'\nORDER BY date",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "position_latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "charging_sessions",
          "timeColumn": "connected",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Refueling",
      "transformations": [],
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 37,
  "style": "dark",
  "tags": [
    "vwsfriend"
  ],
  "templating": {
    "list": [
      {
        "datasource": {
          "type": "postgres",
          "uid": "P2EF847825A020B66"
        },
        "definition": "SELECT \"vin\" || ':' || \"nickname\" || ' (' || \"model\" || ' - ' || \"carType\" || ')' FROM vehicles LEFT JOIN vehicle_settings ON vehicles.VIN = vehicle_settings.vehicle_vin WHERE vehicle_settings.hide IS NOT True ORDER BY vehicle_settings.sorting_order ASC",
        "description": "Select Car if you have multiple cars in your account",
        "hide": 0,
        "includeAll": false,
        "label": "Car",
        "multi": false,
        "name": "VIN",
        "options": [],
        "query": "SELECT \"vin\" || ':' || \"nickname\" || ' (' || \"model\" || ' - ' || \"carType\" || ')' FROM vehicles LEFT JOIN vehicle_settings ON vehicles.VIN = vehicle_settings.vehicle_vin WHERE vehicle_settings.hide IS NOT True ORDER BY vehicle_settings.sorting_order ASC",
        "refresh": 1,
        "regex": "/(?<value>[A-Z0-9]+):(?<text>.*)/",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "P2EF847825A020B66"
        },
        "definition": "SELECT vwsfriend_url FROM settings LIMIT 1",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "vwsfriend_url",
        "options": [],
        "query": "SELECT vwsfriend_url FROM settings LIMIT 1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "P2EF847825A020B66"
        },
        "definition": "SELECT\n    (FIRST_VALUE(\"startDate\") OVER sd)  - INTERVAL '10' SECOND AS \"Start\"\n  FROM trips\n  WHERE\n    ($__timeFilter(\"startDate\") OR $__timeFilter(\"endDate\")) AND\n    trips.vehicle_vin = '$VIN'\n  WINDOW sd as (ORDER BY \"startDate\" ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n  LIMIT 1",
        "description": "timestamp of the trimmed time of the journey",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "tripstart",
        "options": [],
        "query": "SELECT\n    (FIRST_VALUE(\"startDate\") OVER sd)  - INTERVAL '10' SECOND AS \"Start\"\n  FROM trips\n  WHERE\n    ($__timeFilter(\"startDate\") OR $__timeFilter(\"endDate\")) AND\n    trips.vehicle_vin = '$VIN'\n  WINDOW sd as (ORDER BY \"startDate\" ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n  LIMIT 1",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "P2EF847825A020B66"
        },
        "definition": "SELECT\n    LAST_VALUE(\"endDate\") OVER sd  + INTERVAL '10' SECOND AS \"End\"\n  FROM trips\n  WHERE\n    ($__timeFilter(\"startDate\") OR $__timeFilter(\"endDate\")) AND\n    trips.vehicle_vin = '$VIN'\n  WINDOW sd as (ORDER BY \"startDate\" ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n  LIMIT 1",
        "description": "timestamp of the trimmed time of the journey",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "tripend",
        "options": [],
        "query": "SELECT\n    LAST_VALUE(\"endDate\") OVER sd  + INTERVAL '10' SECOND AS \"End\"\n  FROM trips\n  WHERE\n    ($__timeFilter(\"startDate\") OR $__timeFilter(\"endDate\")) AND\n    trips.vehicle_vin = '$VIN'\n  WINDOW sd as (ORDER BY \"startDate\" ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n  LIMIT 1",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": "",
          "value": ""
        },
        "hide": 2,
        "name": "title",
        "options": [
          {
            "selected": true,
            "text": "",
            "value": ""
          }
        ],
        "query": "",
        "skipUrlSync": false,
        "type": "textbox"
      }
    ]
  },
  "time": {
    "from": "now/d",
    "to": "now"
  },
  "timepicker": {
    "hidden": false
  },
  "timezone": "",
  "title": "Journey",
  "uid": "ofOrYjHnz",
  "version": 1,
  "weekStart": ""
}